{"version":3,"sources":["reducers/missions.js","reducers/tasks.js","reducers/missionFilter.js","reducers/index.js","actions/index.js","components/Add.js","components/Nav.js","components/Missions.js","components/Task.js","components/Tasks.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["missions","state","arguments","length","undefined","id","name","color","action","type","concat","Object","toConsumableArray","text","tasks","missionId","description","completed","map","task","i","task_id","objectSpread","deleteTaskIndex","findIndex","console","log","slice","missionFilter","combineReducers","nextTaskId","setMissionFilter","redTheme","createMuiTheme","palette","primary","red","Add","this","props","dispatch","_this","react_default","a","createElement","className","styles","theme","Fab_default","aria-label","Add_default","onClick","handleCreate","Component","connect","Nav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","menuOpen","setState","_this2","IconButton_default","edge","toggleMenu","Menu_default","SwipeableDrawer_default","open","onClose","onOpen","role","List_default","index","ListItem_default","button","key","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","Missions","missionElements","mission","handleClick","style","backgroundColor","Task","event","newDescription","target","value","taskId","updateTask","rc_swipeout_es","right","onPress","handleRemove","left","handleDone","autoClose","onChange","handleToggle","checked","borderColor","handleChange","Tasks","_this$props","filter","allElements","components_Task","find","Main","components_Nav","components_Missions","components_Tasks","components_Add","App","components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.77c0faeb.chunk.js","sourcesContent":["const missions = (state = [\n      {id: 1, name: 'Edu', color: '#2ECC71'},\n      {id: 2, name: 'Mis', color: '#F1C40F'},\n      {id: 3, name: 'Hea', color: '#8E44AD'}\n    ], action) => {\n  switch (action.type) {\n    case 'ADD_MISSION':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text\n        }\n      ]\n    default:\n      return state\n  }\n}\n\nexport default missions","// import update from 'react-addons-update';\n\nconst tasks = (state = [\n      {id: 0, missionId: 1, description: 'Some task about education', completed: false},\n      {id: 1, missionId: 2, description: 'Some miscellaneous task', completed: false},\n      {id: 2, missionId: 3, description: 'Some task about health', completed: false},\n      {id: 3, missionId: 3, description: 'Some task about health', completed: false}\n    ], action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [\n        ...state,\n        {\n          id: action.id,\n          missionId: action.missionId,\n          description: action.description\n        }\n      ]\n    case 'UPDATE_TASK':\n      // return update(state, { \n      //   [action.task_id]: {\n      //     description: {$set: action.description}\n      //   }\n      // });\n      return state.map(\n        (task, i) => task.id === action.task_id ?\n          {...task, description: action.description} :\n          task\n        )\n    case 'DELETE_TASK':\n      let deleteTaskIndex = state.findIndex((task) => task.id === action.task_id);\n      console.log(deleteTaskIndex);\n      return [\n        ...state.slice(0, deleteTaskIndex),\n        ...state.slice(deleteTaskIndex + 1)\n      ]\n    case 'TOGGLE_TASK':\n      return state.map(\n        (task, i) => task.id === action.task_id ?\n          {...task, completed: !task.completed} :\n          task\n        )\n    default:\n      return state\n  }\n}\n\nexport default tasks","const missionFilter = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_MISSION_FILTER':\n      return action.missionId\n    default:\n      return state\n  }\n}\n\nexport default missionFilter\n","import { combineReducers } from 'redux'\nimport missions from './missions'\nimport tasks from './tasks'\nimport missionFilter from './missionFilter'\n\nexport default combineReducers({\n  missions,\n  tasks,\n  missionFilter\n})","let nextMissionId = 0\n\nexport const addMission = text => ({\n  type: 'ADD_MISSION',\n  id: nextMissionId++,\n  text\n})\n\nlet nextTaskId = 4\nexport const addTask = (text, missionId) => ({\n  type: 'ADD_TASK',\n  id: nextTaskId++,\n  missionId: missionId,\n  description: text,\n  completed: false\n})\n\nexport const updateTask = (taskId, newDescription) => ({\n\ttype: 'UPDATE_TASK',\n\ttask_id: taskId,\n\tdescription: newDescription\n})\n\nexport const deleteTask = taskId => ({\n  type: 'DELETE_TASK',\n  task_id: taskId\n})\n\nexport const toggleTask = taskId => ({\n  type: 'TOGGLE_TASK',\n  task_id: taskId\n})\n\nexport const setMissionFilter = missionId => ({\n  type: 'SET_MISSION_FILTER',\n  missionId: missionId\n})\n","import React, { Component } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\n\nimport { connect } from 'react-redux'\nimport { addTask } from '../actions'\n\nconst redTheme = createMuiTheme({ palette: { primary: red } });\n\nclass Add extends Component {\n  handleCreate() {\n    const { missionFilter } = this.props;\n    console.log(missionFilter);\n    this.props.dispatch(addTask(\"\", missionFilter ? missionFilter : 2));\n  }\n\n  render() {\n    return (\n    \t<div className=\"add-button\">\n    \t\t<MuiThemeProvider theme={redTheme}>\n\t\t\t    <Fab color=\"primary\" aria-label=\"Add\">\n\t\t\t        <AddIcon onClick={() => this.handleCreate()} />\n\t\t\t    </Fab>\n\t\t    </MuiThemeProvider>\n    \t</div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  missionFilter: state.missionFilter\n})\n\nexport default connect(mapStateToProps)(Add);\n","import React, { Component } from 'react';\nimport { FaHome, FaFlag, FaUser, FaRegChartBar } from 'react-icons/fa';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {menuOpen: false};\n  }\n\n  toggleMenu() {\n    this.setState({menuOpen: !this.state.menuOpen})\n  }\n\n  render() {\n  \t// const items = [<FaHome />, <FaFlag />, <FaRegChartBar />, <FaUser />];\n   //  <IconContext.Provider value={{ className: \"nav-icon\" }} key={index}>\n   //    {item}\n   //  </IconContext.Provider>\n\n    return (\n      <div className=\"Nav\">\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Menu\" onClick={() => this.toggleMenu()}>\n            <MenuIcon />\n          </IconButton>\n        <SwipeableDrawer\n          open={this.state.menuOpen}\n          onClose={() => this.toggleMenu()}\n          onOpen={() => this.toggleMenu()}\n        >\n          <div role=\"presentation\">\n            <List>\n              {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { setMissionFilter } from '../actions'\n\nclass Missions extends Component {\n  handleClick(missionId) {\n    if (this.props.missionFilter === missionId) {\n      this.props.dispatch(setMissionFilter(null));\n    } else {\n      this.props.dispatch(setMissionFilter(missionId));\n    }\n  }\n\n  render() {\n    const { missions } = this.props;\n\n    const missionElements = missions.map((mission, index) =>\n      <div\n        className={'mission'}\n        key={index}\n        onClick={() => this.handleClick(mission.id)}\n        style={{backgroundColor: mission.color}}\n      >\n        {mission.name}\n      </div>\n    );\n\n    return (\n      <div className=\"missions-container\">\n        {missionElements}\n\n        <div className={'mission light-grey'}>\n          New\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  missions: state.missions,\n  missionFilter: state.missionFilter\n})\n\nexport default connect(\n  mapStateToProps\n)(Missions)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTask, deleteTask, toggleTask } from '../actions';\nimport Swipeout from 'rc-swipeout';\nimport 'rc-swipeout/assets/index.css';\n\nclass Task extends Component {\n  handleChange(event) {\n    const task = this.props.task;\n    const newDescription = event.target.value;\n\n    this.props.dispatch(updateTask(task.id, newDescription));\n  }\n\n  handleRemove() {\n    const task = this.props.task;\n    this.props.dispatch(deleteTask(task.id));\n  }\n\n  handleDone() {\n    console.log('Done')\n  }\n\n  handleToggle() {\n    const task = this.props.task;\n    this.props.dispatch(toggleTask(task.id));\n  }\n\n  render() {\n    const task = this.props.task;\n    const mission = this.props.mission;\n\n    return (\n      \n        <Swipeout\n          right={[\n            {\n              text: 'delete',\n              onPress: () => this.handleRemove(),\n              style: { backgroundColor: 'red', color: 'white' },\n              className: 'custom-class-1'\n            }\n          ]}\n          left={[\n            {\n              text: 'done',\n              onPress: () => this.handleDone(),\n              style: { backgroundColor: mission.color, color: 'white' }\n            }\n          ]}\n          autoClose={true}\n          onOpen={() => console.log('open')}\n          onClose={() => console.log('close')}\n        >\n          \n          <form className=\"task\">\n            {/*<div className={'marker ' + mission.color}></div>*/}\n\n            <div className=\"checkbox-container\">\n            <label className=\"checkbox-label\">\n                <input type=\"checkbox\" onChange={() => this.handleToggle()} checked={task.completed} />\n                <span className=\"checkbox-custom rectangular\" style={{borderColor: mission.color}}></span>\n            </label>\n            </div>\n\n            <input\n              className={'description ' + (task.completed ? 'completed' : '')}\n              value={task.description}\n              onChange={(event) => this.handleChange(event)}\n            />\n          </form>\n        </Swipeout>\n      \n    );\n  }\n}\n\nexport default connect()(Task);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Task from './Task.js';\n\nclass Tasks extends Component {\n  render() {\n    let {tasks, missions, missionFilter} = this.props;\n\n    if (missionFilter !== null) {\n      tasks = tasks.filter((task) => task.missionId === missionFilter)\n    }\n\n    const allElements = tasks.map((task, index) =>\n      <Task\n        task={task}\n        mission={missions.find((mission) => mission.id === task.missionId)}\n        key={index}/>\n    );\n\n    return (\n      <div className=\"tasks\">\n        {/*<div className=\"musts\">\n                  <div className=\"subtitle\">Today's musts</div>\n                  {mustElements}\n        </div>*/}\n\n        <div className=\"general\">\n          <div className=\"subtitle\">All tasks</div>\n          {allElements}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  missions: state.missions,\n  missionFilter: state.missionFilter\n});\n\nexport default connect(\n  mapStateToProps\n)(Tasks);\n","import React, { Component } from 'react';\nimport Add from './Add.js';\nimport Nav from './Nav.js';\nimport Missions from './Missions.js';\nimport Tasks from './Tasks.js';\n\nclass Main extends Component {\n  render() {\n    return (\n      <main>\n        <Nav/>\n        <Missions />\n        <Tasks />\n        <Add />\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Main from './components/Main.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header></header>\n        <Main />\n        <footer></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}